; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.42 

	TITLE	f:\MyD3D\MyD3D\WireFrame\Main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
PUBLIC	??0D3DXMATRIX@@QAE@XZ				; D3DXMATRIX::D3DXMATRIX
PUBLIC	??$Release@PAUID3DXMesh@@@MyD3D@@YAXPAUID3DXMesh@@@Z ; MyD3D::Release<ID3DXMesh *>
PUBLIC	??0D3DXCOLOR@@QAE@I@Z				; D3DXCOLOR::D3DXCOLOR
PUBLIC	?Device@@3PAUIDirect3DDevice9@@A		; Device
PUBLIC	?Teapot@@3PAUID3DXMesh@@A			; Teapot
PUBLIC	??_C@_06PJIGMIJB@Client?$AA@			; `string'
PUBLIC	??_C@_0BJ@NKKGKLBO@RegisterClass?$CI?$CJ?5?9?5FAILED?$AA@ ; `string'
PUBLIC	??_C@_0BI@OAGKFKIA@CreateWindow?$CI?$CJ?5?9?5FAILED?$AA@ ; `string'
PUBLIC	??_C@_0BD@BIJJKMIG@InitD3D?$CI?$CJ?5?9?5FAILED?$AA@ ; `string'
PUBLIC	??_C@_0BB@JHFOHOIG@Setup?$CI?$CJ?5?9?5FAILED?$AA@ ; `string'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_D3DXMatrixLookAtLH@16:PROC
EXTRN	_D3DXMatrixPerspectiveFovLH@20:PROC
EXTRN	_D3DXCreateTeapot@12:PROC
EXTRN	__imp__DefWindowProcA@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__GetStockObject@4:PROC
EXTRN	__imp__RegisterClassA@4:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__LoadIconA@8:PROC
EXTRN	__imp_?InitD3D@MyD3D@@YA_NPAUHINSTANCE__@@PAUHWND__@@HH_NW4_D3DDEVTYPE@@PAPAUIDirect3DDevice9@@@Z:PROC
EXTRN	__imp_?EnterMsgLoop@MyD3D@@YAHP6A_NM@Z@Z:PROC
EXTRN	__imp_?InitMtrl@MyD3D@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z:PROC
?Device@@3PAUIDirect3DDevice9@@A DD 01H DUP (?)		; Device
?Teapot@@3PAUID3DXMesh@@A DD 01H DUP (?)		; Teapot
;	COMDAT ??_C@_0BB@JHFOHOIG@Setup?$CI?$CJ?5?9?5FAILED?$AA@
CONST	SEGMENT
??_C@_0BB@JHFOHOIG@Setup?$CI?$CJ?5?9?5FAILED?$AA@ DB 'Setup() - FAILED', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BIJJKMIG@InitD3D?$CI?$CJ?5?9?5FAILED?$AA@
CONST	SEGMENT
??_C@_0BD@BIJJKMIG@InitD3D?$CI?$CJ?5?9?5FAILED?$AA@ DB 'InitD3D() - FAILE'
	DB	'D', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OAGKFKIA@CreateWindow?$CI?$CJ?5?9?5FAILED?$AA@
CONST	SEGMENT
??_C@_0BI@OAGKFKIA@CreateWindow?$CI?$CJ?5?9?5FAILED?$AA@ DB 'CreateWindow'
	DB	'() - FAILED', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NKKGKLBO@RegisterClass?$CI?$CJ?5?9?5FAILED?$AA@
CONST	SEGMENT
??_C@_0BJ@NKKGKLBO@RegisterClass?$CI?$CJ?5?9?5FAILED?$AA@ DB 'RegisterCla'
	DB	'ss() - FAILED', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06PJIGMIJB@Client?$AA@
CONST	SEGMENT
??_C@_06PJIGMIJB@Client?$AA@ DB 'Client', 00H		; `string'
_PI	DD	04048f5c3r			; 3.14
; Function compile flags: /Ogtpy
; File f:\myd3d\myd3d\d3dutility\d3dutility.h
;	COMDAT ??$Release@PAUID3DXMesh@@@MyD3D@@YAXPAUID3DXMesh@@@Z
_TEXT	SEGMENT
??$Release@PAUID3DXMesh@@@MyD3D@@YAXPAUID3DXMesh@@@Z PROC ; MyD3D::Release<ID3DXMesh *>, COMDAT

; 104  : 	{

	mov	eax, DWORD PTR ?Teapot@@3PAUID3DXMesh@@A ; Teapot

; 105  : 		if ( t )

	test	eax, eax
	je	SHORT $LN1@Release

; 106  : 		{
; 107  : 			t->Release();

	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN1@Release:

; 108  : 			t = 0;
; 109  : 		}
; 110  : 	}

	ret	0
??$Release@PAUID3DXMesh@@@MyD3D@@YAXPAUID3DXMesh@@@Z ENDP ; MyD3D::Release<ID3DXMesh *>
_TEXT	ENDS
PUBLIC	?MyWinProc@@YGJPAUHWND__@@IIJ@Z			; MyWinProc
; Function compile flags: /Ogtpy
; File f:\myd3d\myd3d\wireframe\main.cpp
;	COMDAT ?MyWinProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?MyWinProc@@YGJPAUHWND__@@IIJ@Z PROC			; MyWinProc, COMDAT

; 71   : 	switch(msg)

	mov	eax, DWORD PTR _msg$[esp-4]
	cmp	eax, 16					; 00000010H
	je	SHORT $LN2@MyWinProc

; 76   : 		break;
; 77   : 	default:
; 78   : 		return DefWindowProc(hwnd,msg,wParam,lParam);

	mov	DWORD PTR _msg$[esp-4], eax
	jmp	DWORD PTR __imp__DefWindowProcA@16
$LN2@MyWinProc:

; 72   : 	{
; 73   : 	case WM_CLOSE:
; 74   : 		DestroyWindow(hwnd);

	mov	ecx, DWORD PTR _hwnd$[esp-4]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4

; 75   : 		PostQuitMessage(0);

	push	0
	call	DWORD PTR __imp__PostQuitMessage@4

; 79   : 	}
; 80   : 
; 81   : 	return 0;

	xor	eax, eax

; 82   : }

	ret	16					; 00000010H
?MyWinProc@@YGJPAUHWND__@@IIJ@Z ENDP			; MyWinProc
_TEXT	ENDS
PUBLIC	__real@3f800000
PUBLIC	?Display@@YA_NM@Z				; Display
EXTRN	__fltused:DWORD
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?Display@@YA_NM@Z
_TEXT	SEGMENT
_timeDelta$ = 8						; size = 4
?Display@@YA_NM@Z PROC					; Display, COMDAT

; 49   : 	if (Device)

	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	test	eax, eax
	je	SHORT $LN4@Display

; 50   : 	{
; 51   : 		Device->Clear(0,0,D3DCLEAR_TARGET|D3DCLEAR_ZBUFFER,0xffffffff,1.0f,0);

	mov	ecx, DWORD PTR [eax]
	fld1
	mov	edx, DWORD PTR [ecx+172]
	push	0
	push	ecx
	fstp	DWORD PTR [esp]
	push	-1
	push	3
	push	0
	push	0
	push	eax
	call	edx

; 52   : 
; 53   : 		Device->BeginScene();

	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+164]
	push	eax
	call	edx

; 54   : 
; 55   : 		Teapot->DrawSubset(0);

	mov	eax, DWORD PTR ?Teapot@@3PAUID3DXMesh@@A ; Teapot
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	push	0
	push	eax
	call	edx

; 56   : 
; 57   : 		Device->EndScene();

	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+168]
	push	eax
	call	edx

; 58   : 
; 59   : 		Device->Present(0,0,0,0);

	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+68]
	push	0
	push	0
	push	0
	push	0
	push	eax
	call	edx
$LN4@Display:

; 60   : 	}
; 61   : 
; 62   : 	return true;

	mov	al, 1

; 63   : }

	ret	0
?Display@@YA_NM@Z ENDP					; Display
_TEXT	ENDS
PUBLIC	?Cleanup@@YAXXZ					; Cleanup
; Function compile flags: /Ogtpy
;	COMDAT ?Cleanup@@YAXXZ
_TEXT	SEGMENT
?Cleanup@@YAXXZ PROC					; Cleanup, COMDAT

; 44   : 	MyD3D::Release<ID3DXMesh*>(Teapot);

	mov	eax, DWORD PTR ?Teapot@@3PAUID3DXMesh@@A ; Teapot
	test	eax, eax
	je	SHORT $LN3@Cleanup
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN3@Cleanup:

; 45   : }

	ret	0
?Cleanup@@YAXXZ ENDP					; Cleanup
_TEXT	ENDS
PUBLIC	__real@3f70101020000000
;	COMDAT __real@3f70101020000000
; File f:\myd3d\myd3d\sdk\dx9sdk\include\d3dx10math.inl
CONST	SEGMENT
__real@3f70101020000000 DQ 03f70101020000000r	; 0.00392157
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0D3DXCOLOR@@QAE@I@Z
_TEXT	SEGMENT
tv196 = -4						; size = 4
tv194 = -4						; size = 4
tv192 = -4						; size = 4
tv190 = -4						; size = 4
??0D3DXCOLOR@@QAE@I@Z PROC				; D3DXCOLOR::D3DXCOLOR, COMDAT
; _this$ = eax
; _dw$ = ecx

; 1366 : {

	push	ecx

; 1367 :     CONST FLOAT f = 1.0f / 255.0f;
; 1368 :     r = f * (FLOAT) (unsigned char) (dw >> 16);

	mov	edx, ecx
	shr	edx, 16					; 00000010H
	movzx	edx, dl
	mov	DWORD PTR tv196[esp+4], edx

; 1369 :     g = f * (FLOAT) (unsigned char) (dw >>  8);

	mov	edx, ecx
	shr	edx, 8
	fild	DWORD PTR tv196[esp+4]
	movzx	edx, dl
	fld	QWORD PTR __real@3f70101020000000
	fmul	ST(1), ST(0)
	mov	DWORD PTR tv194[esp+4], edx
	fxch	ST(1)

; 1370 :     b = f * (FLOAT) (unsigned char) (dw >>  0);

	movzx	edx, cl
	fstp	DWORD PTR [eax]
	fild	DWORD PTR tv194[esp+4]
	mov	DWORD PTR tv192[esp+4], edx

; 1371 :     a = f * (FLOAT) (unsigned char) (dw >> 24);

	shr	ecx, 24					; 00000018H
	fmul	ST(0), ST(1)
	fstp	DWORD PTR [eax+4]
	fild	DWORD PTR tv192[esp+4]
	mov	DWORD PTR tv190[esp+4], ecx
	fmul	ST(0), ST(1)
	fstp	DWORD PTR [eax+8]
	fild	DWORD PTR tv190[esp+4]
	fmulp	ST(1), ST(0)
	fstp	DWORD PTR [eax+12]

; 1372 : }

	pop	ecx
	ret	0
??0D3DXCOLOR@@QAE@I@Z ENDP				; D3DXCOLOR::D3DXCOLOR
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = eax

; 321  :     x = fx;

	fld	DWORD PTR _fx$[esp-4]
	fstp	DWORD PTR [eax]

; 322  :     y = fy;

	fld	DWORD PTR _fy$[esp-4]
	fstp	DWORD PTR [eax+4]

; 323  :     z = fz;

	fld	DWORD PTR _fz$[esp-4]
	fstp	DWORD PTR [eax+8]

; 324  : }

	ret	12					; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Ogtpy
; File f:\myd3d\myd3d\sdk\dx9sdk\include\d3dx10math.h
_TEXT	ENDS
;	COMDAT ??0D3DXMATRIX@@QAE@XZ
_TEXT	SEGMENT
??0D3DXMATRIX@@QAE@XZ PROC				; D3DXMATRIX::D3DXMATRIX, COMDAT
; _this$ = eax

; 348  :     D3DXMATRIX() {};

	ret	0
??0D3DXMATRIX@@QAE@XZ ENDP				; D3DXMATRIX::D3DXMATRIX
_TEXT	ENDS
PUBLIC	__real@3fc8f5c3
PUBLIC	__real@3faaaaab
PUBLIC	__real@447a0000
PUBLIC	__real@c0a00000
PUBLIC	__real@00000000
PUBLIC	?Setup@@YA_NXZ					; Setup
;	COMDAT __real@3fc8f5c3
CONST	SEGMENT
__real@3fc8f5c3 DD 03fc8f5c3r			; 1.57
CONST	ENDS
;	COMDAT __real@3faaaaab
CONST	SEGMENT
__real@3faaaaab DD 03faaaaabr			; 1.33333
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@c0a00000
CONST	SEGMENT
__real@c0a00000 DD 0c0a00000r			; -5
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Ogtpy
; File f:\myd3d\myd3d\wireframe\main.cpp
CONST	ENDS
;	COMDAT ?Setup@@YA_NXZ
_TEXT	SEGMENT
_position$ = -168					; size = 12
_up$ = -156						; size = 12
_target$ = -144						; size = 12
_V$ = -132						; size = 64
_proj$ = -68						; size = 64
?Setup@@YA_NXZ PROC					; Setup, COMDAT

; 14   : {

	sub	esp, 172				; 000000acH

; 15   : 	//²èºø
; 16   : 	D3DXCreateTeapot(Device,&Teapot,0);

	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	push	0
	push	OFFSET ?Teapot@@3PAUID3DXMesh@@A	; Teapot
	push	eax
	call	_D3DXCreateTeapot@12

; 17   : 
; 18   : 	//¹Û²ìÕßÎ»ÖÃ
; 19   : 	D3DXVECTOR3 position(0.0f,0.0f,-5.0f);

	fldz
	fst	DWORD PTR _position$[esp+172]

; 20   : 	D3DXVECTOR3 target(0.0f,0.0f,0.0f);
; 21   : 	D3DXVECTOR3 up(0.0f,1.0f,0.0f);
; 22   : 
; 23   : 	D3DXMATRIX V;
; 24   : 	D3DXMatrixLookAtLH(&V,&position,&target,&up);

	lea	ecx, DWORD PTR _up$[esp+172]
	fst	DWORD PTR _position$[esp+176]
	push	ecx
	fld	DWORD PTR __real@c0a00000
	lea	edx, DWORD PTR _target$[esp+176]
	fstp	DWORD PTR _position$[esp+184]
	push	edx
	lea	eax, DWORD PTR _position$[esp+180]
	push	eax
	fst	DWORD PTR _target$[esp+184]
	lea	ecx, DWORD PTR _V$[esp+184]
	fst	DWORD PTR _target$[esp+188]
	push	ecx
	fst	DWORD PTR _target$[esp+196]
	fst	DWORD PTR _up$[esp+188]
	fld1
	fstp	DWORD PTR _up$[esp+192]
	fstp	DWORD PTR _up$[esp+196]
	call	_D3DXMatrixLookAtLH@16

; 25   : 	Device->SetTransform(D3DTS_VIEW,&V);

	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	edx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx+176]
	lea	ecx, DWORD PTR _V$[esp+172]
	push	ecx
	push	2
	push	eax
	call	edx

; 26   : 
; 27   : 	D3DXMATRIX proj;
; 28   : 	D3DXMatrixPerspectiveFovLH(
; 29   : 		&proj,
; 30   : 		MyD3D::PI * 0.5f,
; 31   : 		(float)nWidth/(float)nHeight,
; 32   : 		1.0f,
; 33   : 		1000.0f);

	fld	DWORD PTR __real@447a0000
	sub	esp, 16					; 00000010H
	fstp	DWORD PTR [esp+12]
	lea	eax, DWORD PTR _proj$[esp+188]
	fld1
	fstp	DWORD PTR [esp+8]
	fld	DWORD PTR __real@3faaaaab
	fstp	DWORD PTR [esp+4]
	fld	DWORD PTR __real@3fc8f5c3
	fstp	DWORD PTR [esp]
	push	eax
	call	_D3DXMatrixPerspectiveFovLH@20

; 34   : 	Device->SetTransform(D3DTS_PROJECTION,&proj);

	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _proj$[esp+172]
	push	edx
	push	3
	push	eax
	mov	eax, DWORD PTR [ecx+176]
	call	eax

; 35   : 
; 36   : 	//»æÖÆÄ£Ê½
; 37   : 	Device->SetRenderState(D3DRS_FILLMODE,D3DFILL_WIREFRAME);

	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+228]
	push	2
	push	8
	push	eax
	call	edx

; 38   : 
; 39   : 	return true;

	mov	al, 1

; 40   : }

	add	esp, 172				; 000000acH
	ret	0
?Setup@@YA_NXZ ENDP					; Setup
_TEXT	ENDS
PUBLIC	_WinMain@16
; Function compile flags: /Ogtpy
;	COMDAT _WinMain@16
_TEXT	SEGMENT
_wc$ = -40						; size = 40
_hinstance$ = 8						; size = 4
_prevInstance$ = 12					; size = 4
_cmdLine$ = 16						; size = 4
_showCmd$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT

; 85   : {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 40					; 00000028H
	push	esi

; 86   : 	WNDCLASS wc;
; 87   : 
; 88   : 	wc.style			= CS_HREDRAW|CS_VREDRAW;
; 89   : 	wc.lpfnWndProc		= MyWinProc;
; 90   : 	wc.cbClsExtra		= 0;
; 91   : 	wc.cbWndExtra		= 0;
; 92   : 	wc.hInstance		= hinstance;
; 93   : 	wc.hIcon			= LoadIcon(0,IDI_APPLICATION);

	mov	esi, DWORD PTR __imp__LoadIconA@8
	push	edi
	mov	edi, DWORD PTR _hinstance$[ebp]
	push	32512					; 00007f00H
	push	0
	mov	DWORD PTR _wc$[esp+56], 3
	mov	DWORD PTR _wc$[esp+60], OFFSET ?MyWinProc@@YGJPAUHWND__@@IIJ@Z ; MyWinProc
	mov	DWORD PTR _wc$[esp+64], 0
	mov	DWORD PTR _wc$[esp+68], 0
	mov	DWORD PTR _wc$[esp+72], edi
	call	esi

; 94   : 	wc.hCursor			= LoadIcon(0,IDC_ARROW);

	push	32512					; 00007f00H
	push	0
	mov	DWORD PTR _wc$[esp+76], eax
	call	esi

; 95   : 	wc.hbrBackground	= (HBRUSH)GetStockObject(WHITE_BRUSH);

	push	0
	mov	DWORD PTR _wc$[esp+76], eax
	call	DWORD PTR __imp__GetStockObject@4
	mov	DWORD PTR _wc$[esp+76], eax

; 96   : 	wc.lpszMenuName		= 0;
; 97   : 	wc.lpszClassName	="Client";
; 98   : 
; 99   : 	if (!RegisterClass(&wc))

	lea	eax, DWORD PTR _wc$[esp+48]
	push	eax
	mov	DWORD PTR _wc$[esp+84], 0
	mov	DWORD PTR _wc$[esp+88], OFFSET ??_C@_06PJIGMIJB@Client?$AA@
	call	DWORD PTR __imp__RegisterClassA@4
	test	ax, ax

; 100  : 	{
; 101  : 		::MessageBox(0,"RegisterClass() - FAILED",0,0);

	push	0
	jne	SHORT $LN4@WinMain
	push	0
	push	OFFSET ??_C@_0BJ@NKKGKLBO@RegisterClass?$CI?$CJ?5?9?5FAILED?$AA@
	push	0
	call	DWORD PTR __imp__MessageBoxA@16

; 146  : 	return 0;

	xor	eax, eax

; 147  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN4@WinMain:

; 102  : 		return false;
; 103  : 	}
; 104  : 
; 105  : 	HWND hwnd = 0;
; 106  : 	hwnd = ::CreateWindow("Client","Client",
; 107  : 		WS_EX_TOPMOST,
; 108  : 		100,100,nWidth,nHeight,
; 109  : 		0// parent hwnd
; 110  : 		,0// menu 
; 111  : 		,hinstance
; 112  : 		,0// extra
; 113  : 		);

	push	edi
	push	0
	push	0
	push	600					; 00000258H
	push	800					; 00000320H
	push	100					; 00000064H
	push	100					; 00000064H
	push	8
	push	OFFSET ??_C@_06PJIGMIJB@Client?$AA@
	push	OFFSET ??_C@_06PJIGMIJB@Client?$AA@
	push	0
	call	DWORD PTR __imp__CreateWindowExA@48
	mov	esi, eax

; 114  : 
; 115  : 	if (!hwnd)

	test	esi, esi
	jne	SHORT $LN3@WinMain

; 116  : 	{
; 117  : 		::MessageBox(0,"CreateWindow() - FAILED",0,0);

	push	eax
	push	eax
	push	OFFSET ??_C@_0BI@OAGKFKIA@CreateWindow?$CI?$CJ?5?9?5FAILED?$AA@
	push	eax
	call	DWORD PTR __imp__MessageBoxA@16

; 146  : 	return 0;

	xor	eax, eax

; 147  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN3@WinMain:

; 118  : 		return false;
; 119  : 	}
; 120  : 
; 121  : 	::ShowWindow(hwnd,SW_SHOW);

	push	5
	push	esi
	call	DWORD PTR __imp__ShowWindow@8

; 122  : 	::UpdateWindow(hwnd);

	push	esi
	call	DWORD PTR __imp__UpdateWindow@4

; 123  : 
; 124  : 	//³õÊ¼»¯d3d
; 125  : 	if (!MyD3D::InitD3D(hinstance,hwnd,nWidth,nHeight,true,D3DDEVTYPE_HAL,&Device))

	push	OFFSET ?Device@@3PAUIDirect3DDevice9@@A	; Device
	push	1
	push	1
	push	600					; 00000258H
	push	800					; 00000320H
	push	esi
	push	edi
	call	DWORD PTR __imp_?InitD3D@MyD3D@@YA_NPAUHINSTANCE__@@PAUHWND__@@HH_NW4_D3DDEVTYPE@@PAPAUIDirect3DDevice9@@@Z
	add	esp, 28					; 0000001cH
	test	al, al
	jne	SHORT $LN2@WinMain

; 126  : 	{
; 127  : 		::MessageBox(0,"InitD3D() - FAILED",0,0);

	push	0
	push	0
	push	OFFSET ??_C@_0BD@BIJJKMIG@InitD3D?$CI?$CJ?5?9?5FAILED?$AA@
	push	0
	call	DWORD PTR __imp__MessageBoxA@16

; 146  : 	return 0;

	xor	eax, eax

; 147  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN2@WinMain:

; 128  : 		return 0;
; 129  : 	}
; 130  : 
; 131  : 	//·ÖÅä×ÊÔ´
; 132  : 	if (!Setup())

	call	?Setup@@YA_NXZ				; Setup
	test	al, al
	jne	SHORT $LN1@WinMain

; 133  : 	{
; 134  : 		::MessageBox(0,"Setup() - FAILED",0,0);

	push	0
	push	0
	push	OFFSET ??_C@_0BB@JHFOHOIG@Setup?$CI?$CJ?5?9?5FAILED?$AA@
	push	0
	call	DWORD PTR __imp__MessageBoxA@16

; 146  : 	return 0;

	xor	eax, eax

; 147  : }

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN1@WinMain:

; 135  : 		return 0;
; 136  : 	}
; 137  : 
; 138  : 	//ÏûÏ¢Ñ­»·
; 139  : 	MyD3D::EnterMsgLoop(Display);

	push	OFFSET ?Display@@YA_NM@Z		; Display
	call	DWORD PTR __imp_?EnterMsgLoop@MyD3D@@YAHP6A_NM@Z@Z

; 140  : 
; 141  : 	//ÊÍ·Å×ÊÔ´
; 142  : 	Cleanup();

	mov	eax, DWORD PTR ?Teapot@@3PAUID3DXMesh@@A ; Teapot
	add	esp, 4
	test	eax, eax
	je	SHORT $LN9@WinMain
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN9@WinMain:

; 143  : 
; 144  : 	//ÊÍ·ÅDevice
; 145  : 	Device->Release();

	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx

; 147  : }

	pop	edi
	xor	eax, eax
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_WinMain@16 ENDP
_WHITE	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
PUBLIC	__real@0000000000000000
;	COMDAT __real@0000000000000000
; File f:\myd3d\myd3d\sdk\dx9sdk\include\d3dx10math.inl
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
_BLACK	DB	0cH DUP (?)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
; File f:\myd3d\myd3d\d3dutility\d3dutility.h
;	COMDAT ??__EBLACK@MyD3D@@YAXXZ
text$yc	SEGMENT
tv173 = -4						; size = 4
??__EBLACK@MyD3D@@YAXXZ PROC				; MyD3D::`dynamic initializer for 'BLACK'', COMDAT

; 140  : 	const D3DXCOLOR BLACK(D3DCOLOR_XRGB(0,0,0));		//é»è²

	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv173[esp+4]
	fld	DWORD PTR tv173[esp+4]
	fst	DWORD PTR _BLACK
	fst	DWORD PTR _BLACK+4
	fstp	DWORD PTR _BLACK+8
	pop	ecx
	ret	0
??__EBLACK@MyD3D@@YAXXZ ENDP				; MyD3D::`dynamic initializer for 'BLACK''
_RED	DD	03f800000r			; 1
	DB	8 DUP(00H)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__ERED@MyD3D@@YAXXZ
text$yc	SEGMENT
tv176 = -4						; size = 4
??__ERED@MyD3D@@YAXXZ PROC				; MyD3D::`dynamic initializer for 'RED'', COMDAT

; 141  : 	const D3DXCOLOR RED(D3DCOLOR_XRGB(255,0,0));		//çº¢è²

	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv176[esp+4]
	fld	DWORD PTR tv176[esp+4]
	fst	DWORD PTR _RED+4
	fstp	DWORD PTR _RED+8
	pop	ecx
	ret	0
??__ERED@MyD3D@@YAXXZ ENDP				; MyD3D::`dynamic initializer for 'RED''
_GREEN	DB	04H DUP (?)
	DD	03f800000r			; 1
	DB	4 DUP(00H)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EGREEN@MyD3D@@YAXXZ
text$yc	SEGMENT
tv173 = -4						; size = 4
??__EGREEN@MyD3D@@YAXXZ PROC				; MyD3D::`dynamic initializer for 'GREEN'', COMDAT

; 142  : 	const D3DXCOLOR GREEN(D3DCOLOR_XRGB(0,255,0));		//ç»¿è²

	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv173[esp+4]
	fld	DWORD PTR tv173[esp+4]
	fst	DWORD PTR _GREEN
	fstp	DWORD PTR _GREEN+8
	pop	ecx
	ret	0
??__EGREEN@MyD3D@@YAXXZ ENDP				; MyD3D::`dynamic initializer for 'GREEN''
_BLUE	DB	08H DUP (?)
	DD	03f800000r			; 1
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EBLUE@MyD3D@@YAXXZ
text$yc	SEGMENT
tv173 = -4						; size = 4
??__EBLUE@MyD3D@@YAXXZ PROC				; MyD3D::`dynamic initializer for 'BLUE'', COMDAT

; 143  : 	const D3DXCOLOR BLUE(D3DCOLOR_XRGB(0,0,255));		//èè²

	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv173[esp+4]
	fld	DWORD PTR tv173[esp+4]
	fst	DWORD PTR _BLUE
	fstp	DWORD PTR _BLUE+4
	pop	ecx
	ret	0
??__EBLUE@MyD3D@@YAXXZ ENDP				; MyD3D::`dynamic initializer for 'BLUE''
_YELLOW	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DB	4 DUP(00H)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EYELLOW@MyD3D@@YAXXZ
text$yc	SEGMENT
??__EYELLOW@MyD3D@@YAXXZ PROC				; MyD3D::`dynamic initializer for 'YELLOW'', COMDAT

; 144  : 	const D3DXCOLOR YELLOW(D3DCOLOR_XRGB(255,255,0));	//é»è²

	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR _YELLOW+8
	ret	0
??__EYELLOW@MyD3D@@YAXXZ ENDP				; MyD3D::`dynamic initializer for 'YELLOW''
_CYAN	DB	04H DUP (?)
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__ECYAN@MyD3D@@YAXXZ
text$yc	SEGMENT
??__ECYAN@MyD3D@@YAXXZ PROC				; MyD3D::`dynamic initializer for 'CYAN'', COMDAT

; 145  : 	const D3DXCOLOR CYAN(D3DCOLOR_XRGB(0,255,255));		//èç»¿è²

	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR _CYAN
	ret	0
??__ECYAN@MyD3D@@YAXXZ ENDP				; MyD3D::`dynamic initializer for 'CYAN''
_MAGENTA DD	03f800000r			; 1
	DB	4 DUP(00H)
	DD	03f800000r			; 1
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EMAGENTA@MyD3D@@YAXXZ
text$yc	SEGMENT
??__EMAGENTA@MyD3D@@YAXXZ PROC				; MyD3D::`dynamic initializer for 'MAGENTA'', COMDAT

; 146  : 	const D3DXCOLOR MAGENTA(D3DCOLOR_XRGB(255,0,255));	//æ´çº¢

	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR _MAGENTA+4
	ret	0
??__EMAGENTA@MyD3D@@YAXXZ ENDP				; MyD3D::`dynamic initializer for 'MAGENTA''
text$yc	ENDS
PUBLIC	__real@41000000
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??__EWHITE_MTRL@MyD3D@@YAXXZ
text$yc	SEGMENT
$T79971 = -68						; size = 68
??__EWHITE_MTRL@MyD3D@@YAXXZ PROC			; MyD3D::`dynamic initializer for 'WHITE_MTRL'', COMDAT

; 149  : 	const D3DMATERIAL9 WHITE_MTRL		= InitMtrl(WHITE,WHITE,WHITE,BLACK,8.0f);		//ç½è²æè´¨

	mov	ecx, DWORD PTR _BLACK
	fld	DWORD PTR __real@41000000
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _WHITE+8
	push	edi
	mov	edi, DWORD PTR _WHITE+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _WHITE
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _WHITE+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T79971[esp+144]
	push	eax
	call	DWORD PTR __imp_?InitMtrl@MyD3D@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z
	add	esp, 72					; 00000048H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _WHITE_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EWHITE_MTRL@MyD3D@@YAXXZ ENDP			; MyD3D::`dynamic initializer for 'WHITE_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__ERED_MTRL@MyD3D@@YAXXZ
text$yc	SEGMENT
$T79978 = -68						; size = 68
??__ERED_MTRL@MyD3D@@YAXXZ PROC				; MyD3D::`dynamic initializer for 'RED_MTRL'', COMDAT

; 150  : 	const D3DMATERIAL9 RED_MTRL			= InitMtrl(RED,RED,RED,BLACK,8.0f);				//çº¢è²æè´¨

	mov	ecx, DWORD PTR _BLACK
	fld	DWORD PTR __real@41000000
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _RED+8
	push	edi
	mov	edi, DWORD PTR _RED+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _RED
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _RED+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T79978[esp+144]
	push	eax
	call	DWORD PTR __imp_?InitMtrl@MyD3D@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z
	add	esp, 72					; 00000048H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _RED_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__ERED_MTRL@MyD3D@@YAXXZ ENDP				; MyD3D::`dynamic initializer for 'RED_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EGREEN_MTRL@MyD3D@@YAXXZ
text$yc	SEGMENT
$T79983 = -68						; size = 68
??__EGREEN_MTRL@MyD3D@@YAXXZ PROC			; MyD3D::`dynamic initializer for 'GREEN_MTRL'', COMDAT

; 151  : 	const D3DMATERIAL9 GREEN_MTRL		= InitMtrl(GREEN,GREEN,GREEN,BLACK,8.0f);		//ç»¿è²æè´¨

	mov	ecx, DWORD PTR _BLACK
	fld	DWORD PTR __real@41000000
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _GREEN+8
	push	edi
	mov	edi, DWORD PTR _GREEN+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _GREEN
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _GREEN+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T79983[esp+144]
	push	eax
	call	DWORD PTR __imp_?InitMtrl@MyD3D@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z
	add	esp, 72					; 00000048H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _GREEN_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EGREEN_MTRL@MyD3D@@YAXXZ ENDP			; MyD3D::`dynamic initializer for 'GREEN_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EBLUE_MTRL@MyD3D@@YAXXZ
text$yc	SEGMENT
$T79988 = -68						; size = 68
??__EBLUE_MTRL@MyD3D@@YAXXZ PROC			; MyD3D::`dynamic initializer for 'BLUE_MTRL'', COMDAT

; 152  : 	const D3DMATERIAL9 BLUE_MTRL		= InitMtrl(BLUE,BLUE,BLUE,BLACK,8.0f);			//èè²æè´¨

	mov	ecx, DWORD PTR _BLACK
	fld	DWORD PTR __real@41000000
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _BLUE+8
	push	edi
	mov	edi, DWORD PTR _BLUE+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _BLUE
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _BLUE+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T79988[esp+144]
	push	eax
	call	DWORD PTR __imp_?InitMtrl@MyD3D@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z
	add	esp, 72					; 00000048H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _BLUE_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EBLUE_MTRL@MyD3D@@YAXXZ ENDP			; MyD3D::`dynamic initializer for 'BLUE_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EYELLOW_MTRL@MyD3D@@YAXXZ
text$yc	SEGMENT
$T79993 = -68						; size = 68
??__EYELLOW_MTRL@MyD3D@@YAXXZ PROC			; MyD3D::`dynamic initializer for 'YELLOW_MTRL'', COMDAT

; 153  : 	const D3DMATERIAL9 YELLOW_MTRL		= InitMtrl(YELLOW,YELLOW,YELLOW,BLACK,8.0f);	//é»è²æè´¨

	mov	ecx, DWORD PTR _BLACK
	fld	DWORD PTR __real@41000000
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _YELLOW+8
	push	edi
	mov	edi, DWORD PTR _YELLOW+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _YELLOW
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _YELLOW+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T79993[esp+144]
	push	eax
	call	DWORD PTR __imp_?InitMtrl@MyD3D@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z
	add	esp, 72					; 00000048H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _YELLOW_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EYELLOW_MTRL@MyD3D@@YAXXZ ENDP			; MyD3D::`dynamic initializer for 'YELLOW_MTRL''
_WHITE_MTRL DB	044H DUP (?)
_YELLOW_MTRL DB	044H DUP (?)
_GREEN_MTRL DB	044H DUP (?)
_BLUE_MTRL DB	044H DUP (?)
_RED_MTRL DB	044H DUP (?)
CRT$XCU	SEGMENT
_BLACK$initializer$ DD FLAT:??__EBLACK@MyD3D@@YAXXZ
_RED$initializer$ DD FLAT:??__ERED@MyD3D@@YAXXZ
_GREEN$initializer$ DD FLAT:??__EGREEN@MyD3D@@YAXXZ
_BLUE$initializer$ DD FLAT:??__EBLUE@MyD3D@@YAXXZ
_YELLOW$initializer$ DD FLAT:??__EYELLOW@MyD3D@@YAXXZ
_CYAN$initializer$ DD FLAT:??__ECYAN@MyD3D@@YAXXZ
_MAGENTA$initializer$ DD FLAT:??__EMAGENTA@MyD3D@@YAXXZ
_WHITE_MTRL$initializer$ DD FLAT:??__EWHITE_MTRL@MyD3D@@YAXXZ
_RED_MTRL$initializer$ DD FLAT:??__ERED_MTRL@MyD3D@@YAXXZ
_GREEN_MTRL$initializer$ DD FLAT:??__EGREEN_MTRL@MyD3D@@YAXXZ
_BLUE_MTRL$initializer$ DD FLAT:??__EBLUE_MTRL@MyD3D@@YAXXZ
_YELLOW_MTRL$initializer$ DD FLAT:??__EYELLOW_MTRL@MyD3D@@YAXXZ
CRT$XCU	ENDS
END
